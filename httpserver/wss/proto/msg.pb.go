// Code generated by protoc-gen-go. DO NOT EDIT.
// source: httpserver/wss/proto/msg.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Hall_C_Msg struct {
	Token                string   `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hall_C_Msg) Reset()         { *m = Hall_C_Msg{} }
func (m *Hall_C_Msg) String() string { return proto.CompactTextString(m) }
func (*Hall_C_Msg) ProtoMessage()    {}
func (*Hall_C_Msg) Descriptor() ([]byte, []int) {
	return fileDescriptor_01831625d583696d, []int{0}
}

func (m *Hall_C_Msg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hall_C_Msg.Unmarshal(m, b)
}
func (m *Hall_C_Msg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hall_C_Msg.Marshal(b, m, deterministic)
}
func (m *Hall_C_Msg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hall_C_Msg.Merge(m, src)
}
func (m *Hall_C_Msg) XXX_Size() int {
	return xxx_messageInfo_Hall_C_Msg.Size(m)
}
func (m *Hall_C_Msg) XXX_DiscardUnknown() {
	xxx_messageInfo_Hall_C_Msg.DiscardUnknown(m)
}

var xxx_messageInfo_Hall_C_Msg proto.InternalMessageInfo

func (m *Hall_C_Msg) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

//成功+心跳
type Hall_S_Msg struct {
	UserID               int32           `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	NikeName             string          `protobuf:"bytes,2,opt,name=NikeName,proto3" json:"NikeName,omitempty"`
	UserGold             float32         `protobuf:"fixed32,3,opt,name=UserGold,proto3" json:"UserGold,omitempty"`
	UserDiamonds         float32         `protobuf:"fixed32,4,opt,name=UserDiamonds,proto3" json:"UserDiamonds,omitempty"`
	MemberOrder          int32           `protobuf:"varint,5,opt,name=MemberOrder,proto3" json:"MemberOrder,omitempty"`
	PhoneNumber          string          `protobuf:"bytes,6,opt,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
	BinderCardNo         string          `protobuf:"bytes,7,opt,name=BinderCardNo,proto3" json:"BinderCardNo,omitempty"`
	FaceID               int32           `protobuf:"varint,8,opt,name=FaceID,proto3" json:"FaceID,omitempty"`
	RoleID               int32           `protobuf:"varint,9,opt,name=RoleID,proto3" json:"RoleID,omitempty"`
	SuitID               int32           `protobuf:"varint,10,opt,name=SuitID,proto3" json:"SuitID,omitempty"`
	PhotoFrameID         int32           `protobuf:"varint,11,opt,name=PhotoFrameID,proto3" json:"PhotoFrameID,omitempty"`
	Gender               int32           `protobuf:"varint,12,opt,name=Gender,proto3" json:"Gender,omitempty"`
	TimeStamp            int64           `protobuf:"varint,13,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`
	AnnouncementList     []*Announcement `protobuf:"bytes,14,rep,name=AnnouncementList,proto3" json:"AnnouncementList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Hall_S_Msg) Reset()         { *m = Hall_S_Msg{} }
func (m *Hall_S_Msg) String() string { return proto.CompactTextString(m) }
func (*Hall_S_Msg) ProtoMessage()    {}
func (*Hall_S_Msg) Descriptor() ([]byte, []int) {
	return fileDescriptor_01831625d583696d, []int{1}
}

func (m *Hall_S_Msg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hall_S_Msg.Unmarshal(m, b)
}
func (m *Hall_S_Msg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hall_S_Msg.Marshal(b, m, deterministic)
}
func (m *Hall_S_Msg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hall_S_Msg.Merge(m, src)
}
func (m *Hall_S_Msg) XXX_Size() int {
	return xxx_messageInfo_Hall_S_Msg.Size(m)
}
func (m *Hall_S_Msg) XXX_DiscardUnknown() {
	xxx_messageInfo_Hall_S_Msg.DiscardUnknown(m)
}

var xxx_messageInfo_Hall_S_Msg proto.InternalMessageInfo

func (m *Hall_S_Msg) GetUserID() int32 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *Hall_S_Msg) GetNikeName() string {
	if m != nil {
		return m.NikeName
	}
	return ""
}

func (m *Hall_S_Msg) GetUserGold() float32 {
	if m != nil {
		return m.UserGold
	}
	return 0
}

func (m *Hall_S_Msg) GetUserDiamonds() float32 {
	if m != nil {
		return m.UserDiamonds
	}
	return 0
}

func (m *Hall_S_Msg) GetMemberOrder() int32 {
	if m != nil {
		return m.MemberOrder
	}
	return 0
}

func (m *Hall_S_Msg) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *Hall_S_Msg) GetBinderCardNo() string {
	if m != nil {
		return m.BinderCardNo
	}
	return ""
}

func (m *Hall_S_Msg) GetFaceID() int32 {
	if m != nil {
		return m.FaceID
	}
	return 0
}

func (m *Hall_S_Msg) GetRoleID() int32 {
	if m != nil {
		return m.RoleID
	}
	return 0
}

func (m *Hall_S_Msg) GetSuitID() int32 {
	if m != nil {
		return m.SuitID
	}
	return 0
}

func (m *Hall_S_Msg) GetPhotoFrameID() int32 {
	if m != nil {
		return m.PhotoFrameID
	}
	return 0
}

func (m *Hall_S_Msg) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *Hall_S_Msg) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

func (m *Hall_S_Msg) GetAnnouncementList() []*Announcement {
	if m != nil {
		return m.AnnouncementList
	}
	return nil
}

type Announcement struct {
	NewsID               int32    `protobuf:"varint,1,opt,name=NewsID,proto3" json:"NewsID,omitempty"`
	Subject              string   `protobuf:"bytes,2,opt,name=Subject,proto3" json:"Subject,omitempty"`
	Body                 string   `protobuf:"bytes,3,opt,name=Body,proto3" json:"Body,omitempty"`
	FormattedBody        string   `protobuf:"bytes,4,opt,name=FormattedBody,proto3" json:"FormattedBody,omitempty"`
	ClassID              int32    `protobuf:"varint,5,opt,name=ClassID,proto3" json:"ClassID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Announcement) Reset()         { *m = Announcement{} }
func (m *Announcement) String() string { return proto.CompactTextString(m) }
func (*Announcement) ProtoMessage()    {}
func (*Announcement) Descriptor() ([]byte, []int) {
	return fileDescriptor_01831625d583696d, []int{2}
}

func (m *Announcement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Announcement.Unmarshal(m, b)
}
func (m *Announcement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Announcement.Marshal(b, m, deterministic)
}
func (m *Announcement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Announcement.Merge(m, src)
}
func (m *Announcement) XXX_Size() int {
	return xxx_messageInfo_Announcement.Size(m)
}
func (m *Announcement) XXX_DiscardUnknown() {
	xxx_messageInfo_Announcement.DiscardUnknown(m)
}

var xxx_messageInfo_Announcement proto.InternalMessageInfo

func (m *Announcement) GetNewsID() int32 {
	if m != nil {
		return m.NewsID
	}
	return 0
}

func (m *Announcement) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Announcement) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Announcement) GetFormattedBody() string {
	if m != nil {
		return m.FormattedBody
	}
	return ""
}

func (m *Announcement) GetClassID() int32 {
	if m != nil {
		return m.ClassID
	}
	return 0
}

//失败
type Hall_S_Fail struct {
	ErrorCode            int32    `protobuf:"varint,1,opt,name=ErrorCode,proto3" json:"ErrorCode,omitempty"`
	ErrorMsg             string   `protobuf:"bytes,2,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hall_S_Fail) Reset()         { *m = Hall_S_Fail{} }
func (m *Hall_S_Fail) String() string { return proto.CompactTextString(m) }
func (*Hall_S_Fail) ProtoMessage()    {}
func (*Hall_S_Fail) Descriptor() ([]byte, []int) {
	return fileDescriptor_01831625d583696d, []int{3}
}

func (m *Hall_S_Fail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hall_S_Fail.Unmarshal(m, b)
}
func (m *Hall_S_Fail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hall_S_Fail.Marshal(b, m, deterministic)
}
func (m *Hall_S_Fail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hall_S_Fail.Merge(m, src)
}
func (m *Hall_S_Fail) XXX_Size() int {
	return xxx_messageInfo_Hall_S_Fail.Size(m)
}
func (m *Hall_S_Fail) XXX_DiscardUnknown() {
	xxx_messageInfo_Hall_S_Fail.DiscardUnknown(m)
}

var xxx_messageInfo_Hall_S_Fail proto.InternalMessageInfo

func (m *Hall_S_Fail) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *Hall_S_Fail) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*Hall_C_Msg)(nil), "proto.Hall_C_Msg")
	proto.RegisterType((*Hall_S_Msg)(nil), "proto.Hall_S_Msg")
	proto.RegisterType((*Announcement)(nil), "proto.Announcement")
	proto.RegisterType((*Hall_S_Fail)(nil), "proto.Hall_S_Fail")
}

func init() { proto.RegisterFile("httpserver/wss/proto/msg.proto", fileDescriptor_01831625d583696d) }

var fileDescriptor_01831625d583696d = []byte{
	// 431 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xef, 0x6e, 0xd3, 0x30,
	0x10, 0xc0, 0x95, 0xf5, 0xcf, 0xd6, 0x6b, 0x87, 0x90, 0x41, 0xc8, 0x42, 0x08, 0x45, 0x11, 0x1f,
	0xfa, 0x69, 0x95, 0xe0, 0x01, 0x10, 0x6b, 0x69, 0xa9, 0x44, 0xc3, 0x94, 0x8e, 0xcf, 0x93, 0xdb,
	0x9c, 0xda, 0xb0, 0x38, 0xae, 0x6c, 0x97, 0x89, 0xf7, 0xe0, 0xad, 0x78, 0x29, 0x74, 0xe7, 0xf4,
	0x4f, 0xb4, 0x4f, 0xf1, 0xef, 0x77, 0x77, 0x39, 0xdb, 0x67, 0x78, 0xbf, 0xf5, 0x7e, 0xe7, 0xd0,
	0xfe, 0x46, 0x3b, 0x7a, 0x72, 0x6e, 0xb4, 0xb3, 0xc6, 0x9b, 0x91, 0x76, 0x9b, 0x1b, 0x5e, 0x89,
	0x0e, 0x7f, 0x92, 0x04, 0xe0, 0x9b, 0x2a, 0xcb, 0x87, 0xf1, 0xc3, 0xc2, 0x6d, 0xc4, 0x6b, 0xe8,
	0xdc, 0x9b, 0x47, 0xac, 0x64, 0x14, 0x47, 0xc3, 0x5e, 0x16, 0x20, 0xf9, 0xd7, 0xaa, 0x93, 0x96,
	0x9c, 0xf4, 0x06, 0xba, 0x3f, 0x1d, 0xda, 0xf9, 0x84, 0xb3, 0x3a, 0x59, 0x4d, 0xe2, 0x2d, 0x5c,
	0xa5, 0xc5, 0x23, 0xa6, 0x4a, 0xa3, 0xbc, 0xe0, 0xfa, 0x23, 0x53, 0x8c, 0xb2, 0x66, 0xa6, 0xcc,
	0x65, 0x2b, 0x8e, 0x86, 0x17, 0xd9, 0x91, 0x45, 0x02, 0x03, 0x5a, 0x4f, 0x0a, 0xa5, 0x4d, 0x95,
	0x3b, 0xd9, 0xe6, 0x78, 0xc3, 0x89, 0x18, 0xfa, 0x0b, 0xd4, 0x2b, 0xb4, 0x3f, 0x6c, 0x8e, 0x56,
	0x76, 0xb8, 0xf1, 0xb9, 0xa2, 0x8c, 0xbb, 0xad, 0xa9, 0x30, 0xdd, 0x93, 0x93, 0x5d, 0xde, 0xc0,
	0xb9, 0xa2, 0x3e, 0xb7, 0x45, 0x95, 0xa3, 0x1d, 0x2b, 0x9b, 0xa7, 0x46, 0x5e, 0x72, 0x4a, 0xc3,
	0xd1, 0xd9, 0xa6, 0x6a, 0x8d, 0xf3, 0x89, 0xbc, 0x0a, 0x67, 0x0b, 0x44, 0x3e, 0x33, 0x25, 0xf9,
	0x5e, 0xf0, 0x81, 0xc8, 0x2f, 0xf7, 0x85, 0x9f, 0x4f, 0x24, 0x04, 0x1f, 0x88, 0x7a, 0xdd, 0x6d,
	0x8d, 0x37, 0x53, 0xab, 0x34, 0x55, 0xf5, 0x39, 0xda, 0x70, 0x54, 0x3b, 0x43, 0xea, 0x2d, 0x07,
	0xa1, 0x36, 0x90, 0x78, 0x07, 0xbd, 0xfb, 0x42, 0xe3, 0xd2, 0x2b, 0xbd, 0x93, 0xd7, 0x71, 0x34,
	0x6c, 0x65, 0x27, 0x21, 0x3e, 0xc3, 0xcb, 0x2f, 0x55, 0x65, 0xf6, 0xd5, 0x1a, 0x35, 0x56, 0xfe,
	0x7b, 0xe1, 0xbc, 0x7c, 0x11, 0xb7, 0x86, 0xfd, 0x8f, 0xaf, 0xc2, 0x64, 0x6f, 0xce, 0xc3, 0xd9,
	0xb3, 0xe4, 0xe4, 0x6f, 0x04, 0x83, 0x73, 0x49, 0xfb, 0x48, 0xf1, 0xc9, 0x9d, 0xe6, 0x19, 0x48,
	0x48, 0xb8, 0x5c, 0xee, 0x57, 0xbf, 0x70, 0xed, 0xeb, 0x71, 0x1e, 0x50, 0x08, 0x68, 0xdf, 0x9a,
	0xfc, 0x0f, 0x4f, 0xb2, 0x97, 0xf1, 0x5a, 0x7c, 0x80, 0xeb, 0xa9, 0xb1, 0x5a, 0x79, 0x8f, 0x39,
	0x07, 0xdb, 0x1c, 0x6c, 0x4a, 0xfa, 0xe7, 0xb8, 0x54, 0x8e, 0x9a, 0x85, 0x19, 0x1e, 0x30, 0x99,
	0x41, 0xbf, 0x7e, 0x63, 0x53, 0x55, 0x94, 0x74, 0x09, 0x5f, 0xad, 0x35, 0x76, 0x6c, 0x72, 0xac,
	0xf7, 0x75, 0x12, 0xf4, 0x9c, 0x18, 0x16, 0x6e, 0x73, 0x78, 0x6a, 0x07, 0x5e, 0x75, 0xf9, 0x16,
	0x3e, 0xfd, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x8e, 0x68, 0x56, 0x0b, 0x01, 0x03, 0x00, 0x00,
}
